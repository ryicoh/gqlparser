name: PR Check

on: [pull_request]

# When a new revision is pushed to a PR, cancel all in-progress CI runs for that
# PR. See https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  go-lint:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Golang Style and Lint Check
        uses: golangci/golangci-lint-action@v3
        timeout-minutes: 30
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

  go-test:
    name: Go Test (${{ matrix.os }})
    runs-on: ${{ matrix.run }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            run: ubuntu-latest
          # MacOS is disabled due to the high cost multiplier on GH Actions.
          #- os: darwin
          #  run: macos-latest
          # Windows not allowed currently because of line-ending conversion issues.
          #- os: windows
          #  run: windows-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - id: go_version
        name: Read go version
        run: echo "::set-output name=go_version::$(cat .go-version)"

      - name: Install Go (${{ steps.go_version.outputs.go_version }})
        uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}

      - name: Unit Test Golang
        run: go test ./...
        timeout-minutes: 30

  benchstat:
    name: Report benchmark stat
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.16.x

      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Install benchstat
        run: go install golang.org/x/perf/cmd/benchstat@latest

      - name: Checkout (master branch)
        uses: actions/checkout@v3
        with:
          ref: master
      - name: Run benchmark (master branch)
        run: go test -bench . | tee /tmp/old.txt

      - name: Checkout
        uses: actions/checkout@v3
      - name: Run benchmark
        run: go test -bench . | tee /tmp/new.txt

      - id: benchstat
        name: Run benchstat
        run: |
          benchstat /tmp/old.txt /tmp/new.txt | tee bench_result.txt
          body="$(cat bench_result.txt)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"

      - name: Add comment
        # From the official documentation.
        # https://docs.github.com/en/actions/managing-issues-and-pull-requests/commenting-on-an-issue-when-a-label-is-added#creating-the-workflow
        uses: peter-evans/create-or-update-comment@a35cf36e5301d70b76f316e867e7788a55a31dae
        with:
          issue-number: ${{ github.event.pull_request.number }}
          token: ${{ secrets.PAT }}
          body: |
            Benchmark results:
            ```
            ${{ steps.benchstat.outputs.body }}
            ```
